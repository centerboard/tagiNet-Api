swagger: '2.0'
schemes:
  - https
host: www.taginet.com
basePath: /rest/v1
info:
  description: |

    # Introduction

    This document specifies the webservices provided by tagiNet. This API is built using REST principles, which ensures predictable URLs that makes writing applications easy.

    The services are structured by the following categories:

      * __Configuration__ : Interface for the basic configuration of the tagiNet instance
      * __Me__ : Interface for retrieving data specific to the user
      * __GeneralAccounting__ : Interface for general accounting

    # Query Parameters Details

    Most GET services support additional query parameters to sort, filter and paginate the list of results.

    ## Sorting

    The result of most GET services can be sorted by any of the corresponding object properties.

      * Sorting order is specified by the left to right order of the properties listed
      * Sorting direction defaults to ascending and can be changed to descending by using a minus sign (-) prefix on the requested field.

    _Example_ :

    `/rooms?sort=-capacity,token`

    Retrieves a list of rooms in descending order of capacity. Rooms with the same capacity are sorted by the token.

    ## Filtering

    The result of most GET services can be filtered by any of the corresponding object properties.

    A single filter uses the form:

    `property operator expression`

    In this syntax:

      * `property`: the name of the object property to filter on.
      * `operator` : defines the type of filter match to use. See the list of operators for more details.
      * `expression` : states the values to be included in or excluded from the results.

    ### Operators

    The operators must be URL-encoded in order to be included in URL query strings.

    All string operations are case insensitive.

    | Operator | URL Encoded Form | Description | Examples |
    | -------- | ----------- | -------- | -------- |
    | == | %3D%3D | Equals | Return rooms where the capacity is exactly 50 persons:</br>`/rooms?filter=capacity%3D%3D50`</br>Retun students where the last name is Meier:</br>`/persons/students?filter=lastName%3D%3DMeier` |
    | != | !%3D | Does not equal | Return rooms where the capacity is not 50 persons:</br>`/rooms?filter=capacity!%3D50`</br>Return students where the last name is not Meier:</br>`/persons/students?filter=lastName!%3DMeier` |
    | =~ | %3D~ | Equals | Retun students where the last name contains Meier:</br>`/persons/students?filter=lastName%3D~Meier` |
    | !~ | !~ | Does not equal | Return students where the last name does not conatin Meier:</br>`/persons/students?filter=lastName!~Meier` |
    | > | %3E | Greater than | Return rooms where the capacity is strictly greater than 50 persons:</br>`/rooms?filter=capacity%3E50` |
    | < | %3C | Less than | Return rooms where the capacity is strictly less than 50 persons:</br>`/rooms?filter=capacity%3C50` |
    | >= | %3E%3D | Greater than or equal to | Return rooms where the capacity is 50 persons or more:</br>`/rooms?filter=capacity%3E%3D50` |
    | < = | %3C%3D | Less than or equal to | Return rooms where the capacity is 50 persons or less:</br>`/rooms?filter=capacity%3C%3D50` |

    ### Expression

      * Characters such as & must be url-encoded in the usual way.
      * The semicolon and comma must be backslash escaped when they appear in an expression.

    ### Combining filters

    Filters can be combined using `OR` and `AND` boolean logic.

      * `OR`: The `OR` operator is defined using a comma `,`. It takes precedence over the `AND` operator.
      * `AND`: The `AND` operator is defined using a semi-colon `;`. It is preceded by the `OR` operator.

    _Examples_ :

    Return the rooms with capacity for 15 to 30 persons:
    `/rooms?filter=capacity%3C%3D15;capacity%3E%3D30`

    Return all students where the first name contains Hans, and the last name is Meier or Meyer:
    `/perons/students?filter=firstName%3D~Hans;lastName%3D%3DMeier,lastName%3D%3DMeyer`

    ## Pagination

    The result of most GET services can be paginated with the query parameters `per_page` and `page` to limit the number of datasets in the result.

      * `per_page` indicates how many results will be returned.
      * `page` is used to navigate through the pages, the first page is `1`

    If one of these two parameters is missing, or is not numeric, the unpaginated list of results will be returned.

    If the results are paginated, the response header will contain two additional entries:

      * `X-Total-Count` : indicates the total count of datasets for the GET service, with respect to filtering if the corresponding query parameter is set.
      * `Link` : provides links for the navigation through the pages. URLs for the next page (`rel="next"`) and the last page (`rel="last"`) are set if the requested page is not the last. URLs for the first page (`rel="first"`) and the previous page (`rel="previous"`) are set if the requested page is not the first.
  version: 1.0.0
  title: taginet.com
  termsOfService: 'http://www.schul-netz.com/api-policy.html'
  contact:
    name: Centerboard AG
    email: apiteam@centerboard.ch
    url: 'http://www.centerboard.ch'
  x-logo:
    url: 'https://centerboard.s3.amazonaws.com/CenterboardLogo.jpg'
    backgroundColor: '#FFFFFF'
produces:
  - application/json
consumes:
  - application/json
tags:
  - name: Echo
    description: Example echo operations
  - name: Me
    description: Information about connected user
  - name: GeneralAccounting
    description: Read operations for general accounting
securityDefinitions:
  o_auth:
    type: oauth2
    authorizationUrl: 'https://www.taginet.com/mandant/authorize'
    flow: implicit
  basic_auth:
    type: basic
responses:
  response401:
    description: '401 - Unauthorized: no or wrong user credentials (Client-ID, username, userkey)'
    schema:
      $ref: '#/definitions/Error'
  response403:
    description: '403 - Forbidden: The client is not allowed to connect to that service'
    schema:
      $ref: '#/definitions/Error'
  response404:
    description: 404 - Ressource/Object not found
    schema:
      $ref: '#/definitions/Error'
  response429:
    description: '429 - Too Many Requests: Number of max requests reached. Try again later.'
    schema:
      $ref: '#/definitions/Error'
    headers:
      X-Rate-Limit-Limit:
        description: The number of allowed requests in the current period
        type: integer
      X-Rate-Limit-Remaining:
        description: The number of remaining requests in the current period
        type: integer
      X-Rate-Limit-Reset:
        description: The number of seconds left in the current period
        type: integer
  responseDefault:
    description: Unexpected error
    schema:
      $ref: '#/definitions/Error'
    headers:
      X-Rate-Limit-Limit:
        description: The number of allowed requests in the current period
        type: integer
      X-Rate-Limit-Remaining:
        description: The number of remaining requests in the current period
        type: integer
      X-Rate-Limit-Reset:
        description: The number of seconds left in the current period
        type: integer
paths:
  /me:
    get:
      summary: Returns personal student information
      operationId: meGet
      tags:
        - Me
      responses:
        '200':
          description: Personal User-Information
          schema:
            $ref: '#/definitions/Taginetuser'
          headers:
            X-Rate-Limit-Limit:
              description: The number of allowed requests in the current period
              type: integer
            X-Rate-Limit-Remaining:
              description: The number of remaining requests in the current period
              type: integer
            X-Rate-Limit-Reset:
              description: The number of seconds left in the current period
              type: integer
        '401':
          $ref: '#/responses/response401'
        '403':
          $ref: '#/responses/response403'
        '404':
          $ref: '#/responses/response404'
        '429':
          $ref: '#/responses/response429'
        default:
          $ref: '#/responses/responseDefault'
  '/generalaccounting/balance/{year}':
    get:
      summary: Returns balance sheet
      operationId: balanceGet
      tags:
        - GeneralAccounting
      parameters:
        - name: year
          in: path
          description: accounting year
          required: true
          type: integer
        - name: firstDay
          in: query
          description: 'Start date for filtering bookings, will be ignored if not in SQL-Format (YYYY-MM-DD)'
          required: false
          type: string
        - name: lastDay
          in: query
          description: 'End date for filtering bookings, will be ignored if not in SQL-Format (YYYY-MM-DD)'
          required: false
          type: string
      responses:
        '200':
          description: Balance Sheet returns array of accounts (asset and liability accounts)
          schema:
            type: array
            items:
              $ref: '#/definitions/Fibuaccount'
          headers:
            X-Rate-Limit-Limit:
              description: The number of allowed requests in the current period
              type: integer
            X-Rate-Limit-Remaining:
              description: The number of remaining requests in the current period
              type: integer
            X-Rate-Limit-Reset:
              description: The number of seconds left in the current period
              type: integer
        '401':
          $ref: '#/responses/response401'
        '403':
          $ref: '#/responses/response403'
        '404':
          $ref: '#/responses/response404'
        '429':
          $ref: '#/responses/response429'
        default:
          $ref: '#/responses/responseDefault'
  '/generalaccounting/incomestatement/{year}':
    get:
      summary: Returns income statement
      operationId: incomestatementGet
      tags:
        - GeneralAccounting
      parameters:
        - name: year
          in: path
          description: accounting year
          required: true
          type: integer
        - name: firstDay
          in: query
          description: 'Start date for filtering bookings, will be ignored if not in SQL-Format (YYYY-MM-DD)'
          required: false
          type: string
        - name: lastDay
          in: query
          description: 'End date for filtering bookings, will be ignored if not in SQL-Format (YYYY-MM-DD)'
          required: false
          type: string
      responses:
        '200':
          description: income statement returns array of accounts (revenue and expenses)
          schema:
            type: array
            items:
              $ref: '#/definitions/Fibuaccount'
          headers:
            X-Rate-Limit-Limit:
              description: The number of allowed requests in the current period
              type: integer
            X-Rate-Limit-Remaining:
              description: The number of remaining requests in the current period
              type: integer
            X-Rate-Limit-Reset:
              description: The number of seconds left in the current period
              type: integer
        '401':
          $ref: '#/responses/response401'
        '403':
          $ref: '#/responses/response403'
        '404':
          $ref: '#/responses/response404'
        '429':
          $ref: '#/responses/response429'
        default:
          $ref: '#/responses/responseDefault'
  /config/settings:
    get:
      summary: List settings
      description: Returns the settings of the tagiNet instance
      operationId: configSettingsGet
      tags:
        - Configuration
      responses:
        '200':
          description: List of configuration values
          schema:
            type: array
            items:
              $ref: '#/definitions/Setting'
        '401':
          $ref: '#/responses/response401'
        '403':
          $ref: '#/responses/response403'
        '429':
          $ref: '#/responses/response429'
        default:
          $ref: '#/responses/responseDefault'
  /parents/info:
    get:
      summary: List parent data
      description: |
        Returns the personal data of the parent calling this service.

        If the status is greater than 0, an update has been sent and has not yet been processed (status 1) or is currently beeing processed (status 2).
      operationId: parentsInfoGet
      tags:
        - Parents
      responses:
        '200':
          description: Personal data
          schema:
            $ref: '#/definitions/Parent'
        '401':
          $ref: '#/responses/response401'
        '403':
          $ref: '#/responses/response403'
        '429':
          $ref: '#/responses/response429'
        default:
          $ref: '#/responses/responseDefault'
    put:
      summary: Update the parents data
      description: |
        Submits an update to the personal data.

        This new update will overwrite an existing update, if that one is not currently beeing reviewd. In that case, the response will contain the status 5001, the new update will not be saved.
      tags:
        - Parents
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/Parent'
      responses:
        '200':
          description: Parent info submitted
          schema:
            $ref: '#/definitions/ActionResponse'
        '401':
          $ref: '#/responses/response401'
        '403':
          $ref: '#/responses/response403'
        '429':
          $ref: '#/responses/response429'
        default:
          $ref: '#/responses/responseDefault'
  /echo:
    post:
      tags:
        - Testing
      summary: Echo test
      description: Receive the exact message you've sent
      operationId: echo
      parameters:
        - name: message
          in: body
          description: Echo payload
          required: true
          schema:
            type: string
            example: Hello world!
      security:
        - o_auth: []
        - basic_auth: []
      responses:
        '200':
          description: OK
          examples:
            application/json: Hello world!
          schema:
            type: string
          headers:
            X-Rate-Limit-Limit:
              description: The number of allowed requests in the current period
              type: integer
            X-Rate-Limit-Remaining:
              description: The number of remaining requests in the current period
              type: integer
            X-Rate-Limit-Reset:
              description: The number of seconds left in the current period
              type: integer
        '401':
          $ref: '#/responses/response401'
        '403':
          $ref: '#/responses/response403'
        '404':
          $ref: '#/responses/response404'
        '429':
          $ref: '#/responses/response429'
        default:
          $ref: '#/responses/responseDefault'
definitions:
  Fibuaccount:
    description: Account information
    type: object
    properties:
      id:
        type: string
        description: hash of technical ID
        example: LRzWg
      nr:
        type: string
        description: Account-number
        example: '1010'
      name:
        type: string
        example: Bankkonto Kantonalbank
      accounttype:
        type: string
        enum:
          - asset
          - liability
          - revenue
          - expense
        example: asset
      sum:
        type: boolean
        default: false
        description: account is sum?
        example: false
      balance:
        type: number
        format: double
        example: 939.35
      balancePreviousYear:
        type: number
        format: double
        example: 912.1
      budget:
        type: number
        format: double
      belongsTo:
        type: string
        description: Account-number of parent sum
        example: '100'
  Taginetuser:
    type: object
    required:
      - lastName
      - firstName
    properties:
      id:
        type: string
        example: mzK
      idNr:
        type: string
        example: 98
      lastName:
        type: string
        example: Müller
      firstName:
        type: string
        example: Heinz
      loginActive:
        type: boolean
        default: false
        example: true
      gender:
        type: string
        enum:
          - male
          - female
        example: male
      birthday:
        type: string
        format: date
        example: '1999-09-29'
      street:
        type: string
        example: Hauptstrasse 1
      addressLine2:
        type: string
        maxLength: 255
      postOfficeBox:
        type: string
        maxLength: 255
      zip:
        type: string
        example: '4001'
      city:
        type: string
        example: Basel
      phone:
        type: string
        format: phone
        example: 061 211 00 10
      mobile:
        type: string
        format: phone
        example: 079 711 00 10
      email:
        description: User email address
        type: string
        format: email
        example: john.smith@example.com
      emailPrivate:
        description: User email address
        type: string
        format: email
        example: john.smith@example.com
  Setting:
    type: object
    required:
      - key
    properties:
      key:
        type: string
      value:
        type: string
  ActionResponse:
    required:
      - id
      - status
    properties:
      id:
        type: string
      status:
        type: string
        description: '<ul><li>0: OK</li><li>Exxx: Error</li><li>Wxxx: Warning</li></ul>'
      message:
        type: string
  Parent:
    type: object
    required:
      - firstName
      - lastName
    properties:
      id:
        type: string
      firstName:
        type: string
      lastName:
        type: string
      salutation:
        type: string
      role:
        type: string
      street:
        type: string
      zip:
        type: string
      city:
        type: string
      email:
        type: string
      corrspondanceLanguage:
        type: string
      motherFirstName:
        type: string
      motherLastName:
        type: string
      motherBirthday:
        type: string
        format: date
      motherStreet:
        type: string
      motherZip:
        type: string
      motherCity:
        type: string
      motherNationality:
        type: string
      motherMobile:
        type: string
      motherPhonePrivate:
        type: string
      motherEmailPrivate:
        type: string
      motherProfession:
        type: string
      motherEmployer:
        type: string
      motherWorkplace:
        type: string
      motherPhoneBusiness:
        type: string
      motherEmailBusiness:
        type: string
      fatherFirstName:
        type: string
      fatherLastName:
        type: string
      fatherBirthday:
        type: string
        format: date
      fatherStreet:
        type: string
      fatherZip:
        type: string
      fatherCity:
        type: string
      fatherNationality:
        type: string
      fatherMobile:
        type: string
      fatherPhonePrivate:
        type: string
      fatherEmailPrivate:
        type: string
      fatherProfession:
        type: string
      fatherEmployer:
        type: string
      fatherWorkplace:
        type: string
      fatherPhoneBusiness:
        type: string
      fatherEmailBusiness:
        type: string
      status:
        type: integer
  Error:
    required:
      - code
      - message
    properties:
      code:
        type: integer
        format: int32
        description: '<ul><li>1001: Technical error while calling the Web Service</li><li>1002: Error while parsing the JSON</li><li>1003: Invalid input</li><li>1004: Database Error while inserting</li><li>1005: Database Error because of duplicate entry</li><li>5001: Invalid offerId</li><li>5002: Inavlid course menu</li></ul>'
      message:
        type: string
      description:
        type: string
